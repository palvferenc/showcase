{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0","program":"/home/palvferenc/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--edition=2018","--crate-name","actix_rt","/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=cd07bb4beebac5ab","-C","extra-filename=-cd07bb4beebac5ab","--out-dir","/home/palvferenc/dev/showcase/backend/palvferenc_showcase_services/target/rls/debug/deps","-L","dependency=/home/palvferenc/dev/showcase/backend/palvferenc_showcase_services/target/rls/debug/deps","--extern","actix_macros=/home/palvferenc/dev/showcase/backend/palvferenc_showcase_services/target/rls/debug/deps/libactix_macros-ff80c47af4246988.so","--extern","actix_threadpool=/home/palvferenc/dev/showcase/backend/palvferenc_showcase_services/target/rls/debug/deps/libactix_threadpool-1f84b98e89d45548.rmeta","--extern","copyless=/home/palvferenc/dev/showcase/backend/palvferenc_showcase_services/target/rls/debug/deps/libcopyless-cddf779d48d7f3eb.rmeta","--extern","futures=/home/palvferenc/dev/showcase/backend/palvferenc_showcase_services/target/rls/debug/deps/libfutures-5d8578b5cb1354cf.rmeta","--extern","tokio=/home/palvferenc/dev/showcase/backend/palvferenc_showcase_services/target/rls/debug/deps/libtokio-c0316eb1c59d9b3a.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/palvferenc/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/palvferenc/dev/showcase/backend/palvferenc_showcase_services/target/rls/debug/deps/libactix_rt-cd07bb4beebac5ab.rmeta"},"prelude":{"crate_id":{"name":"actix_rt","disambiguator":[14906953691069805283,3360654185757780559]},"crate_root":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src","external_crates":[{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14029911340352309513,3694302842271320647]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5366521311420338507,5001693844293236078]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16078967021793905033,18044181950654841110]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[3256375668792353550,7694578384779899277]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17967524032803306908,5163911630854790873]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7486411228932131176,10611882423765912104]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8951493940525711481,6598059053846807751]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[6080538021290120973,12135415365643254465]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[2404946192574906823,11198495443784404083]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[8156052144428984436,15205012491124168822]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[11527475684179663565,15577722846879460413]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[4615572763888095747,7180296191060376175]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16051702409717455556,18428390842256153874]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[14083788917415871355,15092499333930635081]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","num":15,"id":{"name":"actix_macros","disambiguator":[10642870281342612034,17225990429156005939]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","num":16,"id":{"name":"futures","disambiguator":[3981826071884195555,5554385868782305608]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","num":17,"id":{"name":"futures_core","disambiguator":[2204936451262060351,13029154680599671870]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","num":18,"id":{"name":"futures_util","disambiguator":[17512861938887487527,8127960363471021716]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","num":19,"id":{"name":"pin_utils","disambiguator":[18010577039992727064,10655941127308172663]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","num":20,"id":{"name":"proc_macro_hack","disambiguator":[17933674407675538236,16791919076114027136]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","num":21,"id":{"name":"futures_task","disambiguator":[5839822128330725477,10431018664629150005]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","num":22,"id":{"name":"futures_channel","disambiguator":[5118000101063838056,9861034387652871988]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","num":23,"id":{"name":"futures_sink","disambiguator":[8183210412250530232,12475241973676126822]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","num":24,"id":{"name":"slab","disambiguator":[14303637837240419134,18129635118717964101]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","num":25,"id":{"name":"futures_io","disambiguator":[3060319772604587979,12463593125722122527]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","num":26,"id":{"name":"futures_macro","disambiguator":[4289825770097657581,9280812555137713343]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","num":27,"id":{"name":"proc_macro_nested","disambiguator":[3533271364790393871,5824381048393399061]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","num":28,"id":{"name":"memchr","disambiguator":[3324684217029528044,2417269997160269761]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","num":29,"id":{"name":"futures_executor","disambiguator":[15581565069553873459,11642439650610951545]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","num":30,"id":{"name":"copyless","disambiguator":[9333376062723642008,15668868888720364956]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/builder.rs","num":31,"id":{"name":"tokio","disambiguator":[14259926957092412487,11822559930600318638]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/builder.rs","num":32,"id":{"name":"pin_project_lite","disambiguator":[17249663530319446451,10148492841536895022]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/builder.rs","num":33,"id":{"name":"bytes","disambiguator":[6321253367020473209,10347469002845128074]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/builder.rs","num":34,"id":{"name":"mio","disambiguator":[8803432924097583300,5517717414733308585]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/builder.rs","num":35,"id":{"name":"net2","disambiguator":[8352699332110559941,5167695052162867905]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/builder.rs","num":36,"id":{"name":"libc","disambiguator":[15828402196291713968,6977015973445822583]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/builder.rs","num":37,"id":{"name":"cfg_if","disambiguator":[10509600652491765595,688247222960852956]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/builder.rs","num":38,"id":{"name":"iovec","disambiguator":[16698266617191014827,11444004726463279828]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/builder.rs","num":39,"id":{"name":"log","disambiguator":[18120854042494803080,16165788460556035654]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/builder.rs","num":40,"id":{"name":"mio_uds","disambiguator":[10830151659892331048,17561306597582301689]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/builder.rs","num":41,"id":{"name":"lazy_static","disambiguator":[14540100287950004670,1419756779819563627]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/builder.rs","num":42,"id":{"name":"fnv","disambiguator":[3181118443443628766,632547605343777043]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/builder.rs","num":43,"id":{"name":"signal_hook_registry","disambiguator":[9350391419952665000,11423075830766391301]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/builder.rs","num":44,"id":{"name":"arc_swap","disambiguator":[6216687617568852157,17973955952924866295]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","num":45,"id":{"name":"actix_threadpool","disambiguator":[12595278207411234892,6077417312076885548]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","num":46,"id":{"name":"derive_more","disambiguator":[18238583862788905990,7992141150464614723]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","num":47,"id":{"name":"parking_lot","disambiguator":[10806171695584529314,6159808607742215876]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","num":48,"id":{"name":"lock_api","disambiguator":[3498068850056936142,12119513565775747213]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","num":49,"id":{"name":"scopeguard","disambiguator":[13854995517341290492,237401158900349964]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","num":50,"id":{"name":"parking_lot_core","disambiguator":[648341665402633396,114221700281758054]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","num":51,"id":{"name":"smallvec","disambiguator":[15001951829963602523,11409485527955037705]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","num":52,"id":{"name":"threadpool","disambiguator":[2556227254302574947,14364190636201156637]}},{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","num":53,"id":{"name":"num_cpus","disambiguator":[3804209158485748850,14602426938898150961]}}],"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","byte_start":0,"byte_end":1488,"line_start":1,"line_end":66,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":15,"index":15},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","byte_start":227,"byte_end":231,"line_start":6,"line_end":6,"column_start":24,"column_end":28},"alias_span":null,"name":"main","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":16},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","byte_start":233,"byte_end":237,"line_start":6,"line_end":6,"column_start":30,"column_end":34},"alias_span":null,"name":"test","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":291},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","byte_start":316,"byte_end":323,"line_start":13,"line_end":13,"column_start":24,"column_end":31},"alias_span":null,"name":"Arbiter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":157},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","byte_start":349,"byte_end":356,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":320},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","byte_start":358,"byte_end":370,"line_start":14,"line_end":14,"column_start":34,"column_end":46},"alias_span":null,"name":"SystemRunner","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":326},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","byte_start":396,"byte_end":403,"line_start":15,"line_end":15,"column_start":24,"column_end":31},"alias_span":null,"name":"Runtime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":331},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","byte_start":427,"byte_end":433,"line_start":16,"line_end":16,"column_start":23,"column_end":29},"alias_span":null,"name":"System","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":45,"index":0},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","byte_start":459,"byte_end":475,"line_start":19,"line_end":19,"column_start":9,"column_end":25},"alias_span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","byte_start":479,"byte_end":487,"line_start":19,"line_end":19,"column_start":29,"column_end":37},"name":"blocking","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","byte_start":913,"byte_end":914,"line_start":41,"line_end":41,"column_start":38,"column_end":39},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":248}},{"kind":"Use","ref_id":{"krate":31,"index":3093},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","byte_start":949,"byte_end":955,"line_start":43,"line_end":43,"column_start":28,"column_end":34},"alias_span":null,"name":"ctrl_c","value":"","parent":{"krate":0,"index":247}},{"kind":"Use","ref_id":{"krate":31,"index":2514},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","byte_start":1024,"byte_end":1033,"line_start":48,"line_end":48,"column_start":25,"column_end":34},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":251}},{"kind":"Use","ref_id":{"krate":31,"index":2363},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","byte_start":1060,"byte_end":1071,"line_start":49,"line_end":49,"column_start":26,"column_end":37},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":251}},{"kind":"Use","ref_id":{"krate":31,"index":2385},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","byte_start":1073,"byte_end":1082,"line_start":49,"line_end":49,"column_start":39,"column_end":48},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":251}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","byte_start":913,"byte_end":914,"line_start":41,"line_end":41,"column_start":38,"column_end":39},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":251}},{"kind":"Use","ref_id":{"krate":31,"index":6603},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","byte_start":1315,"byte_end":1322,"line_start":62,"line_end":62,"column_start":26,"column_end":33},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":262}},{"kind":"Use","ref_id":{"krate":31,"index":6102},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","byte_start":1350,"byte_end":1359,"line_start":63,"line_end":63,"column_start":27,"column_end":36},"alias_span":null,"name":"delay_for","value":"","parent":{"krate":0,"index":262}},{"kind":"Use","ref_id":{"krate":31,"index":6101},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","byte_start":1361,"byte_end":1372,"line_start":63,"line_end":63,"column_start":38,"column_end":49},"alias_span":null,"name":"delay_until","value":"","parent":{"krate":0,"index":262}},{"kind":"Use","ref_id":{"krate":31,"index":6534},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","byte_start":1374,"byte_end":1379,"line_start":63,"line_end":63,"column_start":51,"column_end":56},"alias_span":null,"name":"Delay","value":"","parent":{"krate":0,"index":262}},{"kind":"Use","ref_id":{"krate":31,"index":6350},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","byte_start":1408,"byte_end":1416,"line_start":64,"line_end":64,"column_start":27,"column_end":35},"alias_span":null,"name":"interval","value":"","parent":{"krate":0,"index":262}},{"kind":"Use","ref_id":{"krate":31,"index":6351},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","byte_start":1418,"byte_end":1429,"line_start":64,"line_end":64,"column_start":37,"column_end":48},"alias_span":null,"name":"interval_at","value":"","parent":{"krate":0,"index":262}},{"kind":"Use","ref_id":{"krate":31,"index":6621},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","byte_start":1431,"byte_end":1439,"line_start":64,"line_end":64,"column_start":50,"column_end":58},"alias_span":null,"name":"Interval","value":"","parent":{"krate":0,"index":262}},{"kind":"Use","ref_id":{"krate":31,"index":6377},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","byte_start":1468,"byte_end":1475,"line_start":65,"line_end":65,"column_start":27,"column_end":34},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":262}},{"kind":"Use","ref_id":{"krate":31,"index":6626},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","byte_start":1477,"byte_end":1484,"line_start":65,"line_end":65,"column_start":36,"column_end":43},"alias_span":null,"name":"Timeout","value":"","parent":{"krate":0,"index":262}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","byte_start":0,"byte_end":1488,"line_start":1,"line_end":66,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":140},{"krate":0,"index":184},{"krate":0,"index":196},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":247},{"krate":0,"index":251},{"krate":0,"index":262}],"decl_id":null,"docs":" A runtime implementation that runs everything on the current thread.\n","sig":null,"attributes":[{"value":"deny(rust_2018_idioms, warnings)","span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","byte_start":73,"byte_end":109,"line_start":2,"line_end":2,"column_start":1,"column_end":37}},{"value":"allow(clippy :: type_complexity)","span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","byte_start":110,"byte_end":144,"line_start":3,"line_end":3,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":291},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","byte_start":3128,"byte_end":3135,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"Arbiter","qualname":"::arbiter::Arbiter","value":"Arbiter {  }","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293}],"decl_id":null,"docs":" Arbiters provide an asynchronous execution environment for actors, functions\n and futures. When an Arbiter is created, they spawn a new OS thread, and\n host an event loop. Some Arbiter functions execute on the current thread.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","byte_start":3950,"byte_end":3957,"line_start":79,"line_end":79,"column_start":12,"column_end":19},"name":"current","qualname":"<Arbiter>::current","value":"fn () -> Arbiter","parent":null,"children":[],"decl_id":null,"docs":" Returns the current thread's arbiter's address. If no Arbiter is present, then this\n function will panic!\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","byte_start":4202,"byte_end":4206,"line_start":87,"line_end":87,"column_start":12,"column_end":16},"name":"stop","qualname":"<Arbiter>::stop","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stop arbiter from continuing it's event loop.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","byte_start":4413,"byte_end":4416,"line_start":93,"line_end":93,"column_start":12,"column_end":15},"name":"new","qualname":"<Arbiter>::new","value":"fn () -> Arbiter","parent":null,"children":[],"decl_id":null,"docs":" Spawn new thread and run event loop in spawned thread.\n Returns address of newly created arbiter.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","byte_start":6843,"byte_end":6848,"line_start":166,"line_end":166,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Arbiter>::spawn","value":"fn <F> (future: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future on the current thread. This does not create a new Arbiter\n or Arbiter address, it is simply a helper for spawning futures on the current\n thread.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","byte_start":7697,"byte_end":7705,"line_start":188,"line_end":188,"column_start":12,"column_end":20},"name":"spawn_fn","qualname":"<Arbiter>::spawn_fn","value":"fn <F, R> (f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Executes a future on the current thread. This does not create a new Arbiter\n or Arbiter address, it is simply a helper for executing futures on the current\n thread.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","byte_start":7947,"byte_end":7951,"line_start":197,"line_end":197,"column_start":12,"column_end":16},"name":"send","qualname":"<Arbiter>::send","value":"fn <F> (&self, future: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Send a future to the Arbiter's thread, and spawn it.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","byte_start":8293,"byte_end":8300,"line_start":208,"line_end":208,"column_start":12,"column_end":19},"name":"exec_fn","qualname":"<Arbiter>::exec_fn","value":"fn <F> (&self, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Send a function to the Arbiter's thread, and execute it. Any result from the function\n is discarded.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","byte_start":8762,"byte_end":8766,"line_start":222,"line_end":222,"column_start":12,"column_end":16},"name":"exec","qualname":"<Arbiter>::exec","value":"fn <F, R> (&self, f: F) -> impl Future<Output = Result<R, Canceled>>","parent":null,"children":[],"decl_id":null,"docs":" Send a function to the Arbiter's thread. This function will be executed asynchronously.\n A future is created, and when resolved will contain the result of the function sent\n to the Arbiters thread.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","byte_start":9247,"byte_end":9255,"line_start":239,"line_end":239,"column_start":12,"column_end":20},"name":"set_item","qualname":"<Arbiter>::set_item","value":"fn <T> (item: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set item to arbiter storage\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","byte_start":9439,"byte_end":9452,"line_start":244,"line_end":244,"column_start":12,"column_end":25},"name":"contains_item","qualname":"<Arbiter>::contains_item","value":"fn <T> () -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if arbiter storage contains item\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","byte_start":9705,"byte_end":9713,"line_start":251,"line_end":251,"column_start":12,"column_end":20},"name":"get_item","qualname":"<Arbiter>::get_item","value":"fn <T, F, R> (mut f: F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a type previously inserted on this arbiter's storage.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","byte_start":10225,"byte_end":10237,"line_start":268,"line_end":268,"column_start":12,"column_end":24},"name":"get_mut_item","qualname":"<Arbiter>::get_mut_item","value":"fn <T, F, R> (mut f: F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a type previously inserted on this arbiter's storage.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","byte_start":10881,"byte_end":10885,"line_start":290,"line_end":290,"column_start":12,"column_end":16},"name":"join","qualname":"<Arbiter>::join","value":"fn (&mut self) -> thread::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Wait for the event loop to stop by joining the underlying thread (if have Some).\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":157},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/builder.rs","byte_start":14968,"byte_end":14975,"line_start":18,"line_end":18,"column_start":12,"column_end":19},"name":"Builder","qualname":"::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":159}],"decl_id":null,"docs":" Builder struct for a actix runtime.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/builder.rs","byte_start":15395,"byte_end":15399,"line_start":35,"line_end":35,"column_start":12,"column_end":16},"name":"name","qualname":"<Builder>::name","value":"fn <T> (mut self, name: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the name of the System.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/builder.rs","byte_start":15705,"byte_end":15718,"line_start":44,"line_end":44,"column_start":12,"column_end":25},"name":"stop_on_panic","qualname":"<Builder>::stop_on_panic","value":"fn (mut self, stop_on_panic: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the option 'stop_on_panic' which controls whether the System is stopped when an\n uncaught panic is thrown from a worker thread.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/builder.rs","byte_start":15932,"byte_end":15937,"line_start":52,"line_end":52,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"fn (self) -> SystemRunner","parent":null,"children":[],"decl_id":null,"docs":" Create new System.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/builder.rs","byte_start":16447,"byte_end":16450,"line_start":66,"line_end":66,"column_start":12,"column_end":15},"name":"run","qualname":"<Builder>::run","value":"fn <F> (self, f: F) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" This function will start tokio runtime and will finish once the\n `System::stop()` message get called.\n Function `f` get called within tokio runtime context.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":320},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/builder.rs","byte_start":18940,"byte_end":18952,"line_start":150,"line_end":150,"column_start":12,"column_end":24},"name":"SystemRunner","qualname":"::builder::SystemRunner","value":"SystemRunner {  }","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323}],"decl_id":null,"docs":" Helper object that runs System's event loop\n","sig":null,"attributes":[{"value":"must_use = \"SystemRunner must be run\"","span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/builder.rs","byte_start":18871,"byte_end":18911,"line_start":148,"line_end":148,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/builder.rs","byte_start":19165,"byte_end":19168,"line_start":159,"line_end":159,"column_start":12,"column_end":15},"name":"run","qualname":"<SystemRunner>::run","value":"fn (self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" This function will start event loop and will finish once the\n `System::stop()` function is called.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/builder.rs","byte_start":19862,"byte_end":19870,"line_start":182,"line_end":182,"column_start":12,"column_end":20},"name":"block_on","qualname":"<SystemRunner>::block_on","value":"fn <F, O> (&mut self, fut: F) -> O","parent":null,"children":[],"decl_id":null,"docs":" Execute a future and wait for result.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":326},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/runtime.rs","byte_start":20391,"byte_end":20398,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"Runtime","qualname":"::runtime::Runtime","value":"Runtime {  }","parent":null,"children":[{"krate":0,"index":327},{"krate":0,"index":328}],"decl_id":null,"docs":" Single-threaded runtime provides a way to start reactor\n and runtime on the current thread.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/runtime.rs","byte_start":20592,"byte_end":20595,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<Runtime>::new","value":"fn () -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new runtime initialized with default configuration values.\n","sig":null,"attributes":[{"value":"allow(clippy :: new_ret_no_self)","span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/runtime.rs","byte_start":20470,"byte_end":20503,"line_start":18,"line_end":18,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/runtime.rs","byte_start":21661,"byte_end":21666,"line_start":61,"line_end":61,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Runtime>::spawn","value":"fn <F> (&self, future: F) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the single-threaded runtime.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/runtime.rs","byte_start":22692,"byte_end":22700,"line_start":85,"line_end":85,"column_start":12,"column_end":20},"name":"block_on","qualname":"<Runtime>::block_on","value":"fn <F> (&mut self, f: F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided future, blocking the current thread until the future\n completes.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":331},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/system.rs","byte_start":23257,"byte_end":23263,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"name":"System","qualname":"::system::System","value":"System {  }","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335}],"decl_id":null,"docs":" System is a runtime manager.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/system.rs","byte_start":24084,"byte_end":24091,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"builder","qualname":"<System>::builder","value":"fn () -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Build a new system with a customized tokio runtime.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/system.rs","byte_start":24283,"byte_end":24286,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"new","qualname":"<System>::new","value":"fn <T> (name: T) -> SystemRunner","parent":null,"children":[],"decl_id":null,"docs":" Create new system.","sig":null,"attributes":[{"value":"allow(clippy :: new_ret_no_self)","span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/system.rs","byte_start":24141,"byte_end":24174,"line_start":52,"line_end":52,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/system.rs","byte_start":24555,"byte_end":24567,"line_start":64,"line_end":64,"column_start":12,"column_end":24},"name":"run_in_tokio","qualname":"<System>::run_in_tokio","value":"fn <T> (name: T, local: &LocalSet) -> impl Future<Output = io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Create new system using provided tokio Handle.","sig":null,"attributes":[{"value":"allow(clippy :: new_ret_no_self)","span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/system.rs","byte_start":24385,"byte_end":24418,"line_start":60,"line_end":60,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/system.rs","byte_start":24842,"byte_end":24849,"line_start":75,"line_end":75,"column_start":12,"column_end":19},"name":"current","qualname":"<System>::current","value":"fn () -> System","parent":null,"children":[],"decl_id":null,"docs":" Get current running system.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/system.rs","byte_start":25227,"byte_end":25238,"line_start":89,"line_end":89,"column_start":12,"column_end":23},"name":"set_current","qualname":"<System>::set_current","value":"fn (sys: System) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set current running system.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/system.rs","byte_start":25399,"byte_end":25411,"line_start":96,"line_end":96,"column_start":12,"column_end":24},"name":"with_current","qualname":"<System>::with_current","value":"fn <F, R> (f: F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Execute function with system reference.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/system.rs","byte_start":25666,"byte_end":25668,"line_start":107,"line_end":107,"column_start":12,"column_end":14},"name":"id","qualname":"<System>::id","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" System id\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/system.rs","byte_start":25745,"byte_end":25749,"line_start":112,"line_end":112,"column_start":12,"column_end":16},"name":"stop","qualname":"<System>::stop","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stop the system\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/system.rs","byte_start":25861,"byte_end":25875,"line_start":117,"line_end":117,"column_start":12,"column_end":26},"name":"stop_with_code","qualname":"<System>::stop_with_code","value":"fn (&self, code: i32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stop the system with a particular exit code.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/system.rs","byte_start":26229,"byte_end":26242,"line_start":127,"line_end":127,"column_start":12,"column_end":25},"name":"stop_on_panic","qualname":"<System>::stop_on_panic","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return status of 'stop_on_panic' option which controls whether the System is stopped when an\n uncaught panic is thrown from a worker thread.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/system.rs","byte_start":26328,"byte_end":26335,"line_start":132,"line_end":132,"column_start":12,"column_end":19},"name":"arbiter","qualname":"<System>::arbiter","value":"fn (&self) -> &Arbiter","parent":null,"children":[],"decl_id":null,"docs":" System arbiter\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/system.rs","byte_start":26576,"byte_end":26579,"line_start":139,"line_end":139,"column_start":12,"column_end":15},"name":"run","qualname":"<System>::run","value":"fn <F> (f: F) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" This function will start tokio runtime and will finish once the\n `System::stop()` message get called.\n Function `f` get called within tokio runtime context.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":245},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","byte_start":619,"byte_end":624,"line_start":26,"line_end":26,"column_start":8,"column_end":13},"name":"spawn","qualname":"::spawn","value":"fn <F> (f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Spawns a future on the current arbiter.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":247},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","byte_start":831,"byte_end":837,"line_start":38,"line_end":38,"column_start":9,"column_end":15},"name":"signal","qualname":"::signal","value":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":250}],"decl_id":null,"docs":" Asynchronous signal handling\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":248},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","byte_start":869,"byte_end":873,"line_start":40,"line_end":40,"column_start":13,"column_end":17},"name":"unix","qualname":"::signal::unix","value":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":249}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(unix)","span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","byte_start":844,"byte_end":856,"line_start":39,"line_end":39,"column_start":5,"column_end":17}}]},{"kind":"Mod","id":{"krate":0,"index":251},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","byte_start":994,"byte_end":997,"line_start":47,"line_end":47,"column_start":9,"column_end":12},"name":"net","qualname":"::net","value":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":256},{"krate":0,"index":261}],"decl_id":null,"docs":" TCP/UDP/Unix bindings\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":262},"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","byte_start":1283,"byte_end":1287,"line_start":61,"line_end":61,"column_start":9,"column_end":13},"name":"time","qualname":"::time","value":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":268},{"krate":0,"index":272}],"decl_id":null,"docs":" Utilities for tracking time.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","byte_start":2509,"byte_end":2523,"line_start":33,"line_end":33,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","byte_start":3252,"byte_end":3259,"line_start":52,"line_end":52,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","byte_start":3365,"byte_end":3372,"line_start":58,"line_end":58,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","byte_start":3436,"byte_end":3443,"line_start":64,"line_end":64,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":66},{"krate":0,"index":70},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":84},{"krate":0,"index":88},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":114},{"krate":0,"index":120},{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","byte_start":11192,"byte_end":11209,"line_start":304,"line_end":304,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","byte_start":11575,"byte_end":11592,"line_start":317,"line_end":317,"column_start":17,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","byte_start":12810,"byte_end":12823,"line_start":358,"line_end":358,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","byte_start":13070,"byte_end":13083,"line_start":368,"line_end":368,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","byte_start":14294,"byte_end":14295,"line_start":403,"line_end":403,"column_start":20,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/builder.rs","byte_start":15192,"byte_end":15199,"line_start":26,"line_end":26,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/builder.rs","byte_start":17768,"byte_end":17785,"line_start":116,"line_end":116,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/builder.rs","byte_start":19025,"byte_end":19037,"line_start":156,"line_end":156,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":180},{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/runtime.rs","byte_start":20456,"byte_end":20463,"line_start":17,"line_end":17,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/system.rs","byte_start":23462,"byte_end":23468,"line_start":27,"line_end":27,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":217},{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":226},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","byte_start":2509,"byte_end":2523,"line_start":33,"line_end":33,"column_start":21,"column_end":35},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":50},"to":{"krate":2,"index":7573}},{"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","byte_start":3252,"byte_end":3259,"line_start":52,"line_end":52,"column_start":16,"column_end":23},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":291},"to":{"krate":2,"index":2185}},{"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","byte_start":3365,"byte_end":3372,"line_start":58,"line_end":58,"column_start":18,"column_end":25},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":291},"to":{"krate":2,"index":2210}},{"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","byte_start":3436,"byte_end":3443,"line_start":64,"line_end":64,"column_start":6,"column_end":13},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","byte_start":11192,"byte_end":11209,"line_start":304,"line_end":304,"column_start":15,"column_end":32},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":122},"to":{"krate":2,"index":1731}},{"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","byte_start":11575,"byte_end":11592,"line_start":317,"line_end":317,"column_start":17,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":122},"to":{"krate":2,"index":7887}},{"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","byte_start":12810,"byte_end":12823,"line_start":358,"line_end":358,"column_start":6,"column_end":19},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":309},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","byte_start":13070,"byte_end":13083,"line_start":368,"line_end":368,"column_start":17,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":309},"to":{"krate":2,"index":7887}},{"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","byte_start":14221,"byte_end":14225,"line_start":399,"line_end":399,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":1538},"to":{"krate":0,"index":135}},{"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/arbiter.rs","byte_start":14294,"byte_end":14295,"line_start":403,"line_end":403,"column_start":20,"column_end":21},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":138},"to":{"krate":0,"index":135}},{"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/builder.rs","byte_start":15192,"byte_end":15199,"line_start":26,"line_end":26,"column_start":6,"column_end":13},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/builder.rs","byte_start":17768,"byte_end":17785,"line_start":116,"line_end":116,"column_start":6,"column_end":23},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":315},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/builder.rs","byte_start":19025,"byte_end":19037,"line_start":156,"line_end":156,"column_start":6,"column_end":18},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":320},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/runtime.rs","byte_start":20456,"byte_end":20463,"line_start":17,"line_end":17,"column_start":6,"column_end":13},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":326},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/palvferenc/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.0.0/src/system.rs","byte_start":23462,"byte_end":23468,"line_start":27,"line_end":27,"column_start":6,"column_end":12},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":331},"to":{"krate":4294967295,"index":4294967295}}]}